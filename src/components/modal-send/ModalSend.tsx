import React, { useState } from "react";
import styles from "./ModalSend.module.scss";
import { motion } from "framer-motion";

import { useRef } from "react";
import emailjs from "@emailjs/browser";
  
  interface WindowObject {
    id: number;
    width: string;
    height: string;
  }
  
  interface CalculationResult {
    label: string;
    value: string;
  }
  
  interface ModalSendProps {
    onClose: () => void;
    length: string;
    width: string;
    height: string;
    windowsArray: WindowObject[];
    doorsArray: WindowObject[];
    results: CalculationResult[];
    icon: React.FC<React.SVGProps<SVGSVGElement>>;
  }
  
  const EmailForm: React.FC<ModalSendProps> = ({ 
    onClose, 
    length,
    width,
    height,
    windowsArray, 
    doorsArray, 
    results,
    icon: Icon,

  }) => {
    const form = useRef<HTMLFormElement>(null);

    const [email, setEmail] = useState<string>('')
    const [error, setError] = useState<null | string>(null)

  
    const sendEmail = (event: React.FormEvent) => {
      event.preventDefault();
      if (!form.current) return;
  
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∞—Å—Å–∏–≤ results –≤ –æ–±—ä–µ–∫—Ç —Å —É–¥–æ–±–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –ø–æ –∫–ª—é—á—É
      const calculationData: Record<string, string> = results.reduce((acc, item) => {
        acc[item.label] = item.value;
        return acc;
      }, {} as Record<string, string>);
  
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –æ–∫–æ–Ω –∏ –¥–≤–µ—Ä–µ–π
      const windowsList = windowsArray.map(
        (win) => `- –û–∫–Ω–æ (ID: ${win.id}): ${win.width} x ${win.height} –º`
      ).join("\n");
  
      const doorsList = doorsArray.map(
        (door) => `- –î–≤–µ—Ä—å (ID: ${door.id}): ${door.width} x ${door.height} –º`
      ).join("\n");
  
      const emailContent = `
        üìå **–í–≤–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ**:
        - –ü–ª–æ—â–∞–¥—å –∫–æ–º–Ω–∞—Ç—ã: ${parseFloat(length) * parseFloat(width)} –º¬≤
        - –ü–µ—Ä–∏–º–µ—Ç—Ä: ${parseFloat(length) * 2 + parseFloat(width) * 2} –º
        - –î–ª–∏–Ω–∞: ${length} –º
        - –®–∏—Ä–∏–Ω–∞: ${width} –º
        - –í—ã—Å–æ—Ç–∞: ${height} –º
  
        üö™ **–î–≤–µ—Ä–∏**:
        ${doorsList || "–ù–µ—Ç –¥–≤–µ—Ä–µ–π"}
  
        ü™ü **–û–∫–Ω–∞**:
        ${windowsList || "–ù–µ—Ç –æ–∫–æ–Ω"}
  
        üìè **–†–∞—Å—á—ë—Ç –æ–∫–ª–µ–π–∫–∏**:
        - ${results[0]?.label || "–ö–æ–ª-–≤–æ —Ä—É–ª–æ–Ω–æ–≤"}: ${calculationData["–ö–æ–ª-–≤–æ —Ä—É–ª–æ–Ω–æ–≤"] || "–ù–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ"}
        - ${results[1]?.label || "–ö–æ–ª-–≤–æ m¬≤ –æ–±–æ–µ–≤"}: ${calculationData["–ö–æ–ª-–≤–æ m¬≤ –æ–±–æ–µ–≤"] || "–ù–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ"}
        - ${results[2]?.label || "–ü–ª–æ—â–∞–¥—å –æ–∫–ª–µ–π–∫–∏"}: ${calculationData["–ü–ª–æ—â–∞–¥—å –æ–∫–ª–µ–π–∫–∏"] || "–ù–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ"}
      `;
  
      if (!email.includes('.')) {
        setError('–î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!')
      } else {
        emailjs
        .send(
          "service_v76n54f",
          "template_z4ce9jb",
          {
            to_name: email,
            from_name: "wallpaper-calculator",
            message: emailContent,
            user_email: email,
          },
          "owXEwfATma7du_c7n"
        )
        .then(
          (result) => {
            console.log("–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", result.text);
            onClose();
          },
          (error) => {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", error.text);
          }
        );
      }
      
    };
  
    return (
      <form ref={form} onSubmit={sendEmail} className={styles.form}>
        <h3>–í–≤–µ–¥–∏—Ç–µ email</h3>
        <article className={styles.inputArticle}>
            <label htmlFor="email">Email:</label>
        <input className={styles.input} type="email" value={email} onChange={(event) => {
            setEmail(event.target.value)
            if (!event.target.value.includes('.') && event.target.value.includes('@') && event.target.value.split('@')[1] !== '') {
                setError('–î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!')
              } else {
                setError(null)
              }
            }} required />
        {error && <p className={styles.error}>{error}</p>}
        </article>
        
        <button type="submit" className={styles.sendButton}>
          <article className={styles.sendButtonText}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—á—ë—Ç</article>
          <Icon className={styles.buttonIcon} aria-hidden="true" />
        </button>
      </form>
    );
  };
  

const ModalSend: React.FC<ModalSendProps> = ({ icon, results, doorsArray, windowsArray, length, width, height, onClose }) => {
  return (
    <div className={styles.modalBackdrop} onClick={onClose}>
      <motion.article
        initial={{ opacity: 0, scale: 0.6 }}
        animate={{ opacity: 1, scale: 1 }}
        exit={{ opacity: 0, scale: 0.6 }}
        transition={{ type: "spring", stiffness: 50, damping: 10, duration: 0.3 }}
        className={styles.modal}
        onClick={(e) => e.stopPropagation()} // –ß—Ç–æ–±—ã –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª–∫–∏ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª –µ—ë
      >
        <article className={styles.header}>
          <button className={styles.closeButton} onClick={onClose}>
            ‚úñ
          </button>
          <EmailForm icon={icon} results={results} doorsArray={doorsArray} windowsArray={windowsArray} length={length} width={width} height={height} onClose={onClose} />
          
        </article>
      </motion.article>
    </div>
  );
};

export default ModalSend;
